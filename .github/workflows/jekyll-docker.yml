<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stone Age Game</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Helvetica', sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background: #f0f8ff;
            color: #333;
        }
        header {
            background: linear-gradient(to right, #87CEEB, #4682B4);
            color: white;
            text-align: center;
            padding: 2rem 0;
            position: relative;
            overflow: hidden;
        }
        .container {
            width: 80%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 0;
        }
        h1 {
            font-size: 3rem;
            margin-bottom: 0.5rem;
        }
        h2 {
            color: #4682B4;
            border-bottom: 2px solid #4682B4;
            padding-bottom: 0.5rem;
            margin-top: 2rem;
        }
        p {
            margin-bottom: 1rem;
        }
        .game-preview {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            margin: 2rem 0;
        }
        .game-screenshot {
            flex: 1;
            min-width: 300px;
            background: #87CEEB;
            height: 300px;
            margin-right: 2rem;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            position: relative;
            overflow: hidden;
        }
        .game-description {
            flex: 2;
            min-width: 300px;
        }
        .feature {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .feature-icon {
            color: #4682B4;
            margin-right: 1rem;
            font-size: 1.5rem;
        }
        .code-section {
            background: #f8f8f8;
            padding: 2rem;
            border-radius: 8px;
            margin: 2rem 0;
            border-left: 4px solid #4682B4;
        }
        pre {
            background: #333;
            color: #f8f8f8;
            padding: 1rem;
            border-radius: 4px;
            overflow-x: auto;
        }
        code {
            font-family: 'Courier New', monospace;
        }
        .btn {
            display: inline-block;
            background: #4682B4;
            color: white;
            padding: 0.75rem 1.5rem;
            text-decoration: none;
            border-radius: 4px;
            transition: background 0.3s;
            margin-right: 1rem;
            margin-bottom: 1rem;
        }
        .btn:hover {
            background: #36648B;
        }
        footer {
            background: #333;
            color: white;
            text-align: center;
            padding: 1rem 0;
            margin-top: 2rem;
        }
        .clouds {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            pointer-events: none;
        }
        .cloud {
            position: absolute;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            width: 60px;
            height: 30px;
        }
        .cloud:before, .cloud:after {
            content: '';
            position: absolute;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
        }
        .cloud:before {
            width: 50px;
            height: 50px;
            top: -20px;
            left: 5px;
        }
        .cloud:after {
            width: 30px;
            height: 30px;
            top: -15px;
            right: 15px;
        }
        @media (max-width: 768px) {
            .game-preview {
                flex-direction: column;
            }
            .game-screenshot {
                margin-right: 0;
                margin-bottom: 1rem;
            }
        }

        .game-board {
            display: grid;
            grid-template-columns: repeat(10, 30px);
            gap: 5px;
            margin-bottom: 20px;
        }
        
        .stone {
            width: 30px;
            height: 30px;
            background-color: #8B4513;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 12px;
            color: white;
        }
        
        .game-controls {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .take-btn {
            padding: 8px 16px;
            background-color: #4682B4;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .game-state {
            display: flex;
            justify-content: space-between;
            background-color: white;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <header>
        <div class="clouds">
            <div class="cloud" style="top: 20%; left: 10%;"></div>
            <div class="cloud" style="top: 40%; left: 30%;"></div>
            <div class="cloud" style="top: 30%; left: 60%;"></div>
            <div class="cloud" style="top: 70%; left: 80%;"></div>
        </div>
        <h1>Stone Age</h1>
        <p>A strategic stone-taking game implemented in Python</p>
        <a href="https://github.com/maqaliyeff/StoneGame" class="btn"><i class="fab fa-github"></i> View on GitHub</a>
        <a href="#download" class="btn"><i class="fas fa-download"></i> Download</a>
    </header>
    
    <div class="container">
        <div class="game-preview">
            <div class="game-screenshot">
                <div class="stone-game-demo">
                    <div class="game-state">
                        <div>Player Score: <span id="player-score">0</span></div>
                        <div>Stones Left: <span id="stones-left">20</span></div>
                        <div>Computer Score: <span id="computer-score">0</span></div>
                    </div>
                    <div class="game-board" id="game-board"></div>
                    <div class="game-controls">
                        <button class="take-btn" onclick="takeStones(2)">Take 2</button>
                        <button class="take-btn" onclick="takeStones(3)">Take 3</button>
                    </div>
                    <div id="result"></div>
                </div>
            </div>
            <div class="game-description">
                <h2>About the Game</h2>
                <p>Stone Age is a turn-based strategy game where players take turns removing either 2 or 3 stones from a pile. The interesting twist: if the remaining stones are even, the player gets +2 points; if odd, they lose 2 points.</p>
                
                <div class="feature">
                    <i class="fas fa-chess feature-icon"></i>
                    <strong>Strategic Gameplay</strong>: Plan your moves carefully to maximize your score while minimizing your opponent's.
                </div>
                
                <div class="feature">
                    <i class="fas fa-robot feature-icon"></i>
                    <strong>AI Opponent</strong>: Challenge the computer with either Minimax or Alpha-Beta Pruning algorithms.
                </div>
                
                <div class="feature">
                    <i class="fas fa-cogs feature-icon"></i>
                    <strong>Customizable</strong>: Adjust the starting number of stones to vary game length and complexity.
                </div>
            </div>
        </div>
        
        <h2>How to Play</h2>
        <p>The game starts with a pile of stones (default: 50). On your turn:</p>
        <ol>
            <li>Choose to take either 2 or 3 stones from the pile.</li>
            <li>If the remaining number of stones is even, you get +2 points.</li>
            <li>If the remaining number is odd, you lose 2 points.</li>
            <li>The game continues until no stones remain.</li>
            <li>The player with the highest score wins!</li>
        </ol>
        
        <h2>Game Implementation</h2>
        <p>Stone Age is built using Python with Tkinter for the GUI. The game implements AI strategies using game tree algorithms:</p>
        
        <div class="code-section">
            <h3>Game State and Tree Structure</h3>
            <pre><code>class GameState:
    def __init__(self, stones, player_score, computer_score, turn):
        self.stones = stones
        self.player_score = player_score
        self.computer_score = computer_score
        self.turn = turn
        self.children = []

    def is_terminal(self):
        return self.stones == 0

    def evaluate(self):
        return self.player_score - self.computer_score

class GameTree:
    def __init__(self, root_state):
        self.root = root_state

    def build_tree(self, node, depth):
        if node.is_terminal() or depth == 0:
            return
        for move in [2, 3]:
            if node.stones >= move:
                new_stones = node.stones - move
                if new_stones % 2 == 0:
                    new_pscore = node.player_score + (2 if node.turn == "player" else 0)
                    new_cscore = node.computer_score + (2 if node.turn == "computer" else 0)
                else:
                    new_pscore = node.player_score - (2 if node.turn == "player" else 0)
                    new_cscore = node.computer_score - (2 if node.turn == "computer" else 0)
                next_turn = "computer" if node.turn == "player" else "player"
                child = GameState(new_stones, new_pscore, new_cscore, next_turn)
                node.children.append(child)
                self.build_tree(child, depth - 1)</code></pre>
        </div>
        
        <h2 id="download">Installation & Setup</h2>
        <p>To run the Stone Age game on your local machine:</p>
        <ol>
            <li>Make sure you have Python 3.x installed</li>
            <li>Install required packages: <code>pip install pillow</code></li>
            <li>Clone the repository: <code>git clone https://github.com/yourusername/stone-age-game.git</code></li>
            <li>Navigate to the project directory: <code>cd stone-age-game</code></li>
            <li>Run the game: <code>python game.py</code></li>
        </ol>
        
        <div class="feature">
            <i class="fas fa-exclamation-circle feature-icon"></i>
            <strong>Note:</strong> You'll need to have an image named "image.jpg" in the same directory as the script to serve as the game background.
        </div>
        
        <h2>Future Enhancements</h2>
        <p>Planned improvements for Stone Age include:</p>
        <ul>
            <li>Online multiplayer functionality</li>
            <li>Additional AI difficulty levels</li>
            <li>Game history and statistics tracking</li>
            <li>Mobile-friendly version</li>
        </ul>
    </div>
    
    <footer>
        <p>&copy; 2025 Stone Age Game. Created with Python and Tkinter.</p>
    </footer>

    <script>
        // Simple interactive demo
        let stones = 20;
        let playerScore = 0;
        let computerScore = 0;
        let turn = "player";
        
        function initializeGame() {
            const gameBoard = document.getElementById('game-board');
            gameBoard.innerHTML = '';
            
            for (let i = 0; i < stones; i++) {
                const stone = document.createElement('div');
                stone.className = 'stone';
                stone.innerText = i + 1;
                gameBoard.appendChild(stone);
            }
            
            updateDisplay();
        }
        
        function updateDisplay() {
            document.getElementById('stones-left').innerText = stones;
            document.getElementById('player-score').innerText = playerScore;
            document.getElementById('computer-score').innerText = computerScore;
            
            const gameBoard = document.getElementById('game-board');
            gameBoard.innerHTML = '';
            
            for (let i = 0; i < stones; i++) {
                const stone = document.createElement('div');
                stone.className = 'stone';
                stone.innerText = i + 1;
                gameBoard.appendChild(stone);
            }
        }
        
        function takeStones(count) {
            if (turn !== "player" || stones < count) return;
            
            stones -= count;
            
            if (stones % 2 === 0) {
                playerScore += 2;
            } else {
                playerScore -= 2;
            }
            
            turn = "computer";
            updateDisplay();
            
            if (stones > 0) {
                setTimeout(computerMove, 1000);
            } else {
                showResult();
            }
        }
        
        function computerMove() {
            const move = stones >= 3 ? (stones - 2) % 2 === 0 ? 2 : 3 : (stones >= 2 ? 2 : 0);
            
            if (move > 0) {
                stones -= move;
                
                if (stones % 2 === 0) {
                    computerScore += 2;
                } else {
                    computerScore -= 2;
                }
                
                turn = "player";
                updateDisplay();
                
                if (stones === 0) {
                    showResult();
                }
            }
        }
        
        function showResult() {
            let result = "Game Over! ";
            if (playerScore > computerScore) {
                result += "You win!";
            } else if (playerScore < computerScore) {
                result += "Computer wins!";
            } else {
                result += "It's a draw!";
            }
            
            document.getElementById('result').innerText = result;
        }
        
        function resetDemo() {
            stones = 20;
            playerScore = 0;
            computerScore = 0;
            turn = "player";
            document.getElementById('result').innerText = "";
            initializeGame();
        }
        
        // Initialize when page loads
        window.onload = function() {
            initializeGame();
            
            // Reset every 30 seconds for demo purposes
            setInterval(resetDemo, 30000);
        };
    </script>
</body>
</html>
